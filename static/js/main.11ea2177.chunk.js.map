{"version":3,"sources":["actions/task_form_actions.js","action_creators/task-form-ac.js","containers/task_form/task_form.js","action_creators/search_ac.js","actions/search_action.js","components/search_input/custom_input.js","components/list_element/list_element.js","action_creators/pagination_ac.js","actions/pagination_actions.js","components/pagination/pagination.js","action_creators/task_ac.js","actions/task_actions.js","containers/task_list/task_list.js","action_creators/login_ac.js","actions/login_actions.js","containers/login_form/login_form.js","components/menu.js","App.js","actions/action.js","reducers/main_reducer.js","reducers/task_form_reducer.js","reducers/login_reducer.js","reducers/pagination_reducer.js","sagas/post_saga.js","sagas/main_saga.js","store/store.js","serviceWorker.js","index.js"],"names":["SEND_TASK","changeName","value","type","changeEmail","changeTask","sendTask","task","addTask","TaskForm","params","_this$props","_this","props","currentId","idGenerator","Object","objectSpread","visible","changed","id","status","_this2","this","_this$props2","name","email","react_default","a","createElement","Form","className","Group","widths","Field","control","Input","label","placeholder","onChange","e","target","TextArea","Button","onClick","username","text","Component","connect","state","formReducer","form_actions","searchTask","string","search_actions","icon","ListElement","adm_permission","toggleTask","toggleChange","taskChange","Card","color","Content","Header","Meta","Description","style","textDecoration","autoHeight","marginTop","inverted","extra","Radio","toggle","checked","changePage","page","defaultPage","pagination","currentPage","pagination_actions","amount","Pagination","defaultActivePage","totalPages","Math","ceil","onPageChange","_ref","activePage","payload","tasks","mainReducer","login","admin","task_actions","search_input_custom_input","slice","map","elem","index","list_element_list_element","key","pagination_pagination","length","changeUsername","changePassword","nameError","passwordError","validatedName","validatedPassword","logedAsAdmin","LoginForm","validation","element","loginToggle","nameDidValidated","passwordDidValidated","console","log","_this$props3","password","invalidName","invalidPassword","onBlur","basic","user","login_actions","Menu","Link","to","App","BrowserRouter","components_menu","Switch","Route","exact","path","component","TaskList","FETCH_DATA","WRITE_TO_STORE","initialState","postTaskWorker","watchSendTask","Name","postTask","data","form","FormData","append","axios","url","concat","crossDomain","method","mimeType","contentType","processData","dataType","action","response","regenerator_default","wrap","_context","prev","next","call","sent","stop","_marked","_context2","takeEvery","_marked2","fetchDataWorker","watchFetchData","rootSaga","getPosts","answer","message","put","main_saga_marked","main_saga_marked2","_context3","all","_marked3","rootReducer","combineReducers","arguments","undefined","toConsumableArray","findIndex","index3","index2","searchedElements","toLowerCase","indexOf","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","dispatch","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11ea2177.chunk.js","sourcesContent":["export const CHANGE_NAME = 'CHANGE_NAME';\r\n\r\nexport const CHANGE_EMAIL = 'CHANGE_EMAIL';\r\n\r\nexport const CHANGE_TASK = 'CHANGE_TASK';\r\n\r\nexport const SEND_TASK = 'SEND_TASK';\r\n\r\nexport const ADD_TASK = 'ADD_TASK';","import {CHANGE_NAME,\r\n    CHANGE_EMAIL,\r\n    CHANGE_TASK,\r\n    SEND_TASK,\r\n    ADD_TASK\r\n} from '../actions/task_form_actions';\r\n\r\nexport const changeName = (value) => ({\r\n    type: CHANGE_NAME,\r\n    value\r\n});\r\n\r\nexport const changeEmail = (value) => ({\r\n    type: CHANGE_EMAIL,\r\n    value\r\n});\r\n\r\nexport const changeTask = (value) => ({\r\n    type: CHANGE_TASK,\r\n    value\r\n});\r\n\r\nexport const sendTask = (task) => ({\r\n    type: SEND_TASK,\r\n    task\r\n});\r\n\r\nexport const addTask = (task) => ({\r\n    type: ADD_TASK,\r\n    task\r\n});","import React, { Component } from 'react';\r\nimport { Button, Form, Input, TextArea } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport * as form_actions from '../../action_creators/task-form-ac';\r\nimport idGenerator from 'react-id-generator';\r\nimport './task-form.css';\r\n\r\nclass TaskForm extends Component{\r\n\r\naddTask = (params) => {\r\n    const {addTask, changeName, changeEmail, changeTask } = this.props\r\n    const currentId = idGenerator();\r\n    const task = {...params, visible: true, changed: false, id: currentId, status: 0}\r\n    addTask(task);\r\n    changeName('');\r\n    changeEmail('');\r\n    changeTask('');\r\n}\r\n render(){ \r\n    const {changeName, \r\n        changeEmail, \r\n        changeTask, \r\n        name,\r\n        email,\r\n        task\r\n    } = this.props;\r\n\r\n    return(\r\n        <Form className='form-container'>\r\n            <Form.Group widths='equal'>\r\n                <Form.Field \r\n                    value={name}\r\n                    control={Input}\r\n                    label='User Name' \r\n                    placeholder='User Name'\r\n                    onChange={(e) => changeName(e.target.value)}/>\r\n\r\n                <Form.Field \r\n                    value={email}\r\n                    control={Input} \r\n                    label='Email' \r\n                    placeholder='Email'\r\n                    onChange={(e) => changeEmail(e.target.value)}/>\r\n\r\n            </Form.Group>\r\n            <Form.Field \r\n                value={task}\r\n                control={TextArea} \r\n                label='Task' \r\n                placeholder='Write your task here ...' \r\n                onChange={(e) => changeTask(e.target.value)}/>\r\n      \r\n            <Form.Field \r\n                control={Button}\r\n                onClick={() => this.addTask({username: name, email, text: task})}\r\n            >Create</Form.Field>\r\n        </Form>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: state.formReducer.name,\r\n    email: state.formReducer.email,\r\n    task: state.formReducer.task\r\n});\r\n\r\nexport default connect(mapStateToProps, form_actions)(TaskForm);\r\n\r\n// onClick={() => sendTask({name, email, task})}","import { SEARCH } from '../actions/search_action';\r\n\r\nexport const searchTask = (string) => ({\r\n    type: SEARCH,\r\n    string\r\n});","export const SEARCH = 'SEARCH';\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport * as search_actions from '../../action_creators/search_ac';\r\nimport './custom-input.css';\r\n\r\nconst SearchInput = (props) => {\r\n    const { searchTask } = props;\r\n\r\n    return (\r\n        <div className='search-container'>\r\n            <Input \r\n                className='search-input'\r\n                icon='search'\r\n                placeholder='Search...'\r\n                onChange={(e) => searchTask(e.target.value)}\r\n            />\r\n        </div>\r\n    );};\r\n\r\nexport default connect(null, search_actions)(SearchInput);","import React, { Component } from 'react';\r\nimport { Card, Radio, TextArea, Button } from 'semantic-ui-react';\r\nimport './list-element.css';\r\n\r\nclass ListElement extends Component {\r\n\r\n    render(){\r\n        const {username,\r\n            email,\r\n            status, \r\n            adm_permission,\r\n            text,\r\n            toggleTask,\r\n            toggleChange,\r\n            taskChange,\r\n            changed\r\n        } = this.props;\r\n        \r\n        return(\r\n            <Card color={status === 10 ?  'grey': 'green'}>\r\n                <Card.Content>\r\n                    <Card.Header>{username}</Card.Header>\r\n                    <Card.Meta>{email}</Card.Meta>\r\n                    <Card.Description \r\n                        onClick={() => adm_permission === true ? toggleChange() : null }\r\n                        style={status === 10 \r\n                            ? {textDecoration:'line-through'}\r\n                            :{textDecoration:'none'}}>\r\n                        {text}\r\n                    </Card.Description>\r\n                    { adm_permission === true                                \r\n                        ?changed === true \r\n                            ? ( <div> \r\n                                <TextArea \r\n                                    className='change-textarea'\r\n                                    autoHeight\r\n                                    value={text}\r\n                                    onChange={(e) => taskChange(e) }\r\n                                />\r\n                                <Button\r\n                                    style={{marginTop: '10px'}}\r\n                                    inverted color='green'\r\n                                    onClick={() => toggleChange()}\r\n                                >Change</Button>\r\n                            </div> \r\n                            )\r\n                            :null\r\n                        :null    \r\n                    }\r\n                </Card.Content>{ \r\n                    adm_permission === true\r\n                        ? (<Card.Content extra className='card-bottom'>\r\n                            <label>Done</label>\r\n                            <Radio toggle\r\n                                checked={\r\n                                    status === 10 \r\n                                        ? true\r\n                                        : false\r\n                                }\r\n                                onChange={() => toggleTask() }\r\n                            />\r\n                        </Card.Content>)\r\n                        : null }\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListElement;\r\n","import { CHANGE_PAGE } from '../actions/pagination_actions';\r\n\r\nexport const changePage = (page) => ({ \r\n    type: CHANGE_PAGE,\r\n    page\r\n});","export const CHANGE_PAGE = 'CHANGE_PAGE';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Pagination } from 'semantic-ui-react';\r\nimport * as pagination_actions from '../.././action_creators/pagination_ac';\r\nimport './pagination.css';\r\n\r\nconst CustomPagination = (props) => {\r\n    const { amount,\r\n        defaultPage,\r\n        changePage\r\n    } = props;\r\n    return(\r\n        <div className='pagination-container'>\r\n            <Pagination defaultActivePage={defaultPage} totalPages={Math.ceil(amount/3)}\r\n                onPageChange={(e, {activePage}) => changePage(activePage)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    defaultPage: state.pagination.currentPage\r\n});\r\n\r\nexport default connect(mapStateToProps, pagination_actions)(CustomPagination);","import { TOGGLE_TASK, TOGGLE_CHANGE, TASK_CHANGE } from '../actions/task_actions';\r\n\r\nexport const toggleTask = (payload) =>({\r\n    type: TOGGLE_TASK,\r\n    payload\r\n});\r\n\r\nexport const toggleChange = (id) => ({\r\n    type: TOGGLE_CHANGE,\r\n    id\r\n});\r\n\r\nexport const taskChange = (payload) => ({\r\n    type: TASK_CHANGE,\r\n    payload\r\n});\r\n\r\n","export const TOGGLE_TASK = 'TOGGLE_TASK';\r\n\r\nexport const TOGGLE_CHANGE = 'TOGGLE_CHANGE';\r\n\r\nexport const TASK_CHANGE = 'TASK_CHANGE';","import React from 'react';\r\nimport { Card, Radio } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport SearchInput from '../../components/search_input/custom_input';\r\nimport ListElement from '../../components/list_element/list_element';\r\nimport CustomPagination from '../../components/pagination/pagination';\r\nimport * as task_actions from '../../action_creators/task_ac';\r\nimport './task-list.css';\r\n\r\nconst TaskList = (props) => {\r\n    const { tasks,\r\n        adm_permission,\r\n        toggleTask,\r\n        toggleChange,\r\n        currentPage,\r\n        taskChange\r\n    } = props;                                         \r\n    return(\r\n        <div className='tasklist-container'>\r\n            <SearchInput/>\r\n            <Card.Group className='tasklist-group'>\r\n                {tasks\r\n                    .slice(3 * currentPage - 3, 3 * currentPage)\r\n                    .map((elem, index) => (\r\n                        elem.visible === true \r\n                            ? (<ListElement\r\n                                key={index}\r\n                                username={elem.username}\r\n                                email={elem.email}\r\n                                status={elem.status}\r\n                                id={elem.id}\r\n                                text={elem.text}\r\n                                changed={elem.changed}\r\n                                taskChange={(e) => taskChange({id: elem.id, text: e.target.value})}\r\n                                toggleChange={() => toggleChange(elem.id)}\r\n                                toggleTask={() =>  toggleTask({id: elem.id, status: elem.status})}\r\n                                adm_permission={adm_permission}\r\n                            />)\r\n                            :null\r\n                    )) \r\n                }\r\n            </Card.Group>\r\n            <CustomPagination amount={tasks.length}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tasks: state.mainReducer,\r\n    adm_permission: state.login.admin,\r\n    currentPage: state.pagination.currentPage\r\n});\r\n\r\nexport default connect(mapStateToProps, task_actions)(TaskList);\r\n\r\n\r\n\r\n// taskChange({id: elem.id, text: e.target.value})","import { CHANGE_USERNAME,\r\n    CHANGE_PASSWORD,\r\n    NAME_ERROR,\r\n    PASSWORD_ERROR,\r\n    VALIDATED_PASSWORD,\r\n    VALIDATED_NAME,\r\n    ADMIN_LOGIN\r\n} from '../actions/login_actions';\r\n\r\nexport const changeUsername = (value) => ({\r\n    type: CHANGE_USERNAME,\r\n    value\r\n});\r\n\r\nexport const changePassword = (value) => ({\r\n    type: CHANGE_PASSWORD,\r\n    value\r\n});\r\n\r\nexport const nameError = (toggle) => ({\r\n    type: NAME_ERROR,\r\n    toggle\r\n});\r\n\r\nexport const passwordError = (toggle) =>({\r\n    type: PASSWORD_ERROR,\r\n    toggle\r\n});\r\n\r\nexport const validatedName = (toggle) => ({\r\n    type: VALIDATED_NAME,\r\n    toggle\r\n});\r\n\r\nexport const validatedPassword = (toggle) => ({\r\n    type: VALIDATED_PASSWORD,\r\n    toggle\r\n});\r\n\r\nexport const logedAsAdmin = () => ({\r\n    type: ADMIN_LOGIN\r\n});","export const LOGIN = 'LOGIN';\r\n\r\nexport const CHANGE_USERNAME = 'CHANGE_USERNAME';\r\n\r\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\n\r\nexport const NAME_ERROR = 'NAME_ERROR';\r\n\r\nexport const PASSWORD_ERROR = 'PASSWORD_ERROR';\r\n\r\nexport const VALIDATED_NAME = 'VALIDATED_NAME';\r\n\r\nexport const VALIDATED_PASSWORD = 'VALIDATED_PASSWORD';\r\n\r\nexport const ADMIN_LOGIN = 'ADMIN_LOGIN';\r\n\r\n","import React, {Component} from 'react';\r\nimport { Button, Form} from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport * as login_actions from '../../action_creators/login_ac'\r\nimport './login-form.css'\r\n\r\nclass LoginForm extends Component {\r\n\r\n  validation = (element) => {\r\n\r\n    const { nameError,\r\n          passwordError,\r\n          validatedName,\r\n          validatedPassword} = this.props\r\n    if(element.placeholder === 'username'){\r\n      if(element.value === 'admin'){\r\n       nameError(false)\r\n       validatedName(true)       \r\n      }else{\r\n        nameError(true)\r\n      }\r\n    }else if(element.placeholder === 'password'){\r\n      if(element.value === '123'){\r\n        passwordError(false)\r\n        validatedPassword(true)\r\n      }else{\r\n        passwordError(true)\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  loginToggle = () => {\r\n    const {nameDidValidated, passwordDidValidated, logedAsAdmin } = this.props\r\n    console.log(nameDidValidated);\r\n    console.log(passwordDidValidated);\r\n    if(nameDidValidated && passwordDidValidated){\r\n      console.log('you are logged');\r\n      logedAsAdmin()\r\n    }\r\n  }\r\n  \r\n  render(){ \r\n  const {changeUsername,\r\n        changePassword,\r\n        username,\r\n        password,\r\n        invalidName,\r\n        invalidPassword,\r\n        } = this.props;    \r\n    return(\r\n        <Form className='login-container'>\r\n        <Form.Field>\r\n        <label>User name</label>\r\n        <input \r\n        placeholder='username'\r\n        value={username}\r\n        onChange={e => changeUsername(e.target.value)}\r\n        onBlur={e => this.validation(e.target)}/>\r\n        </Form.Field>\r\n        <div style={{color: 'tomato'}}>\r\n        {\r\n          invalidName ? 'invalid user' : null    \r\n        }        \r\n        </div>\r\n        <Form.Field>\r\n        <label>Password</label>\r\n        <input \r\n        value={password}\r\n        placeholder='password'\r\n        type='password'\r\n        onChange={e => changePassword(e.target.value)}\r\n        onBlur={e => this.validation(e.target)}/>\r\n        <div style={{color: 'tomato'}}>\r\n        {\r\n          invalidPassword ? 'invalid password' : null    \r\n        }        \r\n        </div>\r\n        </Form.Field>\r\n        <Button \r\n        basic \r\n        color='green'\r\n        className='login-button'\r\n        type='submit'\r\n        onClick={this.loginToggle}\r\n        >Log In</Button>\r\n      </Form>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: state.login.user,\r\n  password: state.login.password,\r\n  invalidName: state.login.nameError,\r\n  invalidPassword: state.login.passwordError,\r\n  nameDidValidated: state.login.nameDidValidated,\r\n  passwordDidValidated: state.login.passwordDidValidated\r\n})\r\n\r\nexport default connect(mapStateToProps, login_actions)(LoginForm);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './menu.css';\r\n\r\nconst Menu = () => {\r\n    return(\r\n        <div className='menu-container'>\r\n            <Link to='/'\r\n                className='link'\r\n            >All tasks</Link>      \r\n\r\n            <Link to='/form'\r\n                className='link'\r\n            >Create task</Link>\r\n        \r\n            <Link to='/login'\r\n                className='link'\r\n            >Sign in</Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport TaskForm from './containers/task_form/task_form';\r\nimport TaskList from './containers/task_list/task_list';\r\nimport LoginForm from './containers/login_form/login_form.js';\r\nimport Menu from './components/menu';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <Menu/>\r\n                    <Switch>\r\n                        <Route exact path='/' component={TaskList} />\r\n                        <Route path='/form' component={TaskForm} />\r\n                        <Route path='/login' component={LoginForm} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","export const ACTION = 'ACTION';\r\n\r\nexport const FETCH_DATA = 'FETCH_DATA';\r\n\r\nexport const FETCH_ASYNC_DATA = 'FETCH_ASYNC_DATA';\r\n\r\nexport const WRITE_TO_STORE = 'WRITE_TO_STORE';\r\n\r\n","import { TOGGLE_TASK, TOGGLE_CHANGE, TASK_CHANGE } from '../actions/task_actions';\r\nimport { SEARCH } from '../actions/search_action';\r\nimport { WRITE_TO_STORE } from '../actions/action';\r\nimport { ADD_TASK } from '../actions/task_form_actions';\r\nconst initialState = [\r\n    {\r\n        email: 'rob@gmail.com',\r\n        id: '213',\r\n        status: 10,\r\n        text: 'relax',\r\n        username: 'Roberto',\r\n        visible: true,\r\n        changed: false\r\n    },\r\n    {\r\n        email: 'kim@gmail.com',\r\n        id: '214',\r\n        status: 0,\r\n        text: 'relax',\r\n        username: 'Kim',\r\n        visible: true,\r\n        changed: false\r\n    },\r\n    {\r\n        email: 'aang@gmail.com',\r\n        id: '215',\r\n        status: 0,\r\n        text: 'Bring balance',\r\n        username: 'Anng',\r\n        visible: true,\r\n        changed: false\r\n    },\r\n    {\r\n        email: 'john_doe@gmail.com',\r\n        id: '216',\r\n        status: 0,\r\n        text: 'Lorem ipsum dolor sit amet',\r\n        username: 'John Doe',\r\n        visible: true,\r\n        changed: false\r\n    },\r\n    {\r\n        email: 'enakin_skywalker@gmail.com',\r\n        id: '217',\r\n        status: 0,\r\n        text: 'Lorem ipsum dolor sit amet',\r\n        username: 'Enakin Skywalker',\r\n        visible: true,\r\n        changed: false\r\n    }\r\n];\r\n\r\nexport const mainReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n    case WRITE_TO_STORE:\r\n        return[\r\n            ...state,\r\n            ...action.data\r\n        ];    \r\n    case TOGGLE_TASK:\r\n        const index = state.findIndex( task => task.id === action.payload.id);\r\n        return[\r\n            ...state.slice(0, index),\r\n            {\r\n                ...state[index],\r\n                status: action.payload.status === 10 ? 0 : 10\r\n            },\r\n            ...state.slice(index + 1)\r\n        ];\r\n    case TASK_CHANGE: \r\n        const index3 = state.findIndex( task => task.id === action.payload.id);\r\n        return[\r\n            ...state.slice(0, index3),\r\n            {\r\n                ...state[index3],\r\n                text: action.payload.text\r\n            },\r\n            ...state.slice(index3 + 1)\r\n        ];\r\n\r\n    case TOGGLE_CHANGE:\r\n        const index2 = state.findIndex( task => task.id === action.id);\r\n        return[\r\n            ...state.slice(0, index2),\r\n            {\r\n                ...state[index2],\r\n                changed: !state[index2].changed,\r\n            },\r\n            ...state.slice(index2 + 1)\r\n        ];    \r\n    case SEARCH:\r\n        const searchedElements =  state.map(task => task.username.toLowerCase()\r\n            .indexOf(action.string.toLowerCase()) === -1\r\n            ? { ...task, visible: false}\r\n            : { ...task, visible: true}\r\n        );\r\n        return[ \r\n            ...searchedElements\r\n        ];\r\n    case ADD_TASK: return state.concat(action.task);\r\n    default: return state;\r\n    }\r\n};","import {CHANGE_NAME,\r\n    CHANGE_EMAIL,\r\n    CHANGE_TASK\r\n} from '../actions/task_form_actions';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    email: '',\r\n    task: ''\r\n};\r\n\r\nexport const formReducer = ( state = initialState , action) => {\r\n    switch (action.type) {\r\n    case CHANGE_NAME:\r\n        return{\r\n            ...state,\r\n            name: action.value,\r\n        };\r\n    case CHANGE_EMAIL:\r\n        return{\r\n            ...state,\r\n            email: action.value\r\n        };  \r\n    case CHANGE_TASK:\r\n        return{\r\n            ...state,\r\n            task: action.value\r\n        };      \r\n    default: return state;\r\n    }\r\n};","import {CHANGE_USERNAME, \r\n    CHANGE_PASSWORD,\r\n    NAME_ERROR,\r\n    PASSWORD_ERROR, \r\n    VALIDATED_PASSWORD,\r\n    VALIDATED_NAME,\r\n    ADMIN_LOGIN,\r\n} from '../actions/login_actions';\r\n\r\nconst initialState = {\r\n    admin: false,\r\n    user: '',\r\n    password: '',\r\n    nameError: false,\r\n    passwordError: false,\r\n    nameDidValidated: false,\r\n    passwordDidValidated: false,\r\n\r\n};\r\n\r\nexport const loginReducer = ( state = initialState, action ) => {\r\n    switch (action.type){\r\n    case CHANGE_USERNAME :\r\n        return{\r\n            ...state,\r\n            user: action.value\r\n        };\r\n    case CHANGE_PASSWORD :\r\n        return{\r\n            ...state,\r\n            password: action.value\r\n        };\r\n    case NAME_ERROR :\r\n        return{\r\n            ...state,\r\n            nameError: action.toggle\r\n        };\r\n    case PASSWORD_ERROR :\r\n        return{\r\n            ...state,\r\n            passwordError: action.toggle\r\n        };\r\n    case VALIDATED_NAME :\r\n        return{\r\n            ...state,\r\n            nameDidValidated: action.toggle\r\n        };\r\n    case VALIDATED_PASSWORD :\r\n        return{\r\n            ...state,\r\n            passwordDidValidated: action.toggle\r\n        };\r\n    case ADMIN_LOGIN :\r\n        return{\r\n            ...state,\r\n            admin: true,\r\n        };\r\n    default: return state;\r\n    }\r\n};","import { CHANGE_PAGE } from '../actions/pagination_actions';\r\n\r\nconst initialState = {\r\n    currentPage: 1\r\n};\r\n\r\nexport const paginationReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n    case CHANGE_PAGE : \r\n        return{\r\n            ...state,\r\n            currentPage: action.page\r\n        };\r\n    default: return state;\r\n    }\r\n};","import axios from 'axios';\r\nimport {call, takeEvery} from 'redux-saga/effects';\r\nimport {SEND_TASK} from '../actions/task_form_actions';\r\n\r\nconst Name = 'Maxim';\r\n\r\nfunction postTask(data) {\r\n    let form = new FormData();\r\n    form.append('username', data.name);\r\n    form.append('email', data.email);\r\n    form.append('text', data.task);\r\n    return axios({\r\n        url: `https://uxcandy.com/~shapoval/test-task-backend/create?developer=${Name}`,\r\n        crossDomain: true,\r\n        method: 'POST',\r\n        mimeType: 'multipart/form-data',\r\n        contentType: false,\r\n        processData: false,\r\n        data: form,\r\n        dataType: 'json',\r\n    });  \r\n}\r\n\r\nfunction* postTaskWorker(action){\r\n    const response = yield call(postTask, action.task);\r\n    console.log(response.data);\r\n}\r\n\r\nexport function* watchSendTask (){\r\n    yield takeEvery(SEND_TASK, postTaskWorker);\r\n}","import axios from 'axios';\r\nimport { takeEvery, takeLatest, all, put, call } from 'redux-saga/effects';\r\nimport { FETCH_ASYNC_DATA, FETCH_DATA, WRITE_TO_STORE } from '../actions/action';\r\nimport { watchSendTask } from './post_saga';\r\n \r\nconst Name = 'Maxim';\r\n\r\nfunction getPosts() {\r\n    console.log('here');\r\n    return axios({\r\n        url: `https://uxcandy.com/~shapoval/test-task-backend/?developer=${Name}`,\r\n        method: 'GET',       \r\n    });  \r\n}\r\n\r\nfunction* fetchDataWorker(){\r\n    const response = yield call(getPosts);\r\n    console.log(response.data.message.tasks);\r\n    const answer = response.data.message.tasks.map(task => ({...task, visible: true, changed: false}));\r\n    console.log(answer);\r\n    yield put({\r\n        type: WRITE_TO_STORE,\r\n        data: answer\r\n    });\r\n}\r\n\r\nfunction* watchFetchData(){\r\n    yield takeEvery(FETCH_DATA, fetchDataWorker);\r\n}\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        watchFetchData(),\r\n        watchSendTask()\r\n    ]);\r\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { FETCH_DATA } from '../actions/action';\r\nimport { mainReducer } from '../reducers/main_reducer';\r\nimport { formReducer } from '../reducers/task_form_reducer';\r\nimport { loginReducer } from '../reducers/login_reducer';\r\nimport { paginationReducer } from '../reducers/pagination_reducer';\r\nimport rootSaga from '../sagas/main_saga';\r\n\r\nconst rootReducer = combineReducers({\r\n    mainReducer,\r\n    formReducer,\r\n    login: loginReducer,\r\n    pagination: paginationReducer\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst initialState = {};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(\r\n        applyMiddleware(sagaMiddleware)\r\n    )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nstore.dispatch({type: FETCH_DATA});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './store/store';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst Root = () => (\r\n    <Provider store={store}>\r\n        <App/>  \r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(<Root/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}